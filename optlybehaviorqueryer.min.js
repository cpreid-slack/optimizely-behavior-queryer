var behavior=function(){var e=optimizely.get("behavior"),t={general:["type","name","category"],numeric:["time","age","revenue"]},r={numeric:["gt","gte","lt","lte","between"],general:["eq","is","in","contains","exists"]},n=function(e){return t.numeric.indexOf(e)>-1?r.general.concat(r.numeric):r.general},i=function(e){return t.general.indexOf(e)<0&&t.numeric.indexOf(e)<0},o=function(){var t={version:"0.2"};this.has_compute_aggregator=function(){return void 0!==t.reduce&&"undefined"!==t.reduce.aggregator&&"nth"!==t.reduce.aggregator},this.set_q_part=function(e,r){t[e]=r},this.delete_q_part=function(e){delete t[e]},this.addFilter=function(e){return"filter"in t||(t.filter=[]),t.filter.push(e),this},this.addSort=function(e){return"sort"in t||(t.sort=[]),t.sort.push(e),this},this.compute=function(e,t){if(!e||!t)throw"aggregate_fnc && aggregate_field must be used in compute";this.setAggregator(e),this.pick(t)},this.run=function(r){return this.has_compute_aggregator()||"sort"in t||this.orderBy("time","descending"),r&&console.log(t),e.query(t)}};return o.prototype={setAggregator:function(e,t){var r={aggregator:e};for(var n in t||{})r[n]=t[n];return this.set_q_part("reduce",r),this},pick:function(e){return e=i(e)?["tags",e]:[e],this.set_q_part("pick",{field:e}),this},where:function(e,t,r){var o=n(e);if(t=t||"exists",o.indexOf(t)<0)throw"comparator ("+t+") not valid for field: "+e;if("exists"!==t&&void 0===r)throw"you need a value when using comparator: "+t;var a={field:e=i(e)?["tags",e]:[e],comparator:t};return"exists"!==t&&(a.value=r),this.addFilter(a),this},type:function(e){var t={field:["type"],value:e};return e instanceof Array&&(t.comparator="in"),this.addFilter(t),this},orderBy:function(e,t){return this.addSort({field:[e||"time"],direction:t||"descending"}),this}},{compute:function(e,t){var r=new o;return r.compute(e,t),r},find:function(e){var t=new o;return e&&t.type(e),t},findOne:function(e){var t=this.find(e);return t.setAggregator("nth",{n:0}),t}}}();