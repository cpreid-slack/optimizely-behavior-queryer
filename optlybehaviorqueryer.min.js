var behavior=function(){var t=optimizely.get("behavior"),e={general:["type","name","category"],numeric:["time","age","revenue"]},r={numeric:["gt","gte","lt","lte","between"],general:["eq","is","in","contains","exists"]},n=function(t){return e.numeric.indexOf(t)>-1?r.general.concat(r.numeric):r.general},i=function(t){return e.general.indexOf(t)<0&&e.numeric.indexOf(t)<0},a=function(){var e={version:"0.2"};this.has_computational_aggregator=function(){return void 0!==e.reduce&&"undefined"!==e.reduce.aggregator&&"nth"!==e.reduce.aggregator},this.set_q_part=function(t,r){e[t]=r},this.delete_q_part=function(t){delete e[t]},this.addFilter=function(t){return"filter"in e||(e.filter=[]),e.filter.push(t),this},this.addSort=function(t){if(this.has_computational_aggregator())throw"Cannot use sort with `compute`";return"sort"in e||(e.sort=[]),e.sort.push(t),this},this.addComputationalAggregator=function(t,e){if(!t||!e)throw"aggregate_fnc && aggregate_field must be used in compute";this.setAggregator(t),this.pick(e)},this.run=function(r){return this.has_computational_aggregator()||"sort"in e||this.orderBy("time","descending"),r&&console.log(e),t.query(e)}};return a.prototype={setAggregator:function(t,e){var r={aggregator:t};for(var n in e||{})r[n]=e[n];return this.set_q_part("reduce",r),this},pick:function(t){return t=i(t)?["tags",t]:[t],this.set_q_part("pick",{field:t}),this},where:function(t,e,r){var a=n(t);if(e=e||"exists",a.indexOf(e)<0)throw"comparator ("+e+") not valid for field: "+t;if("exists"!==e&&void 0===r)throw"you need a value when using comparator: "+e;var o={field:t=i(t)?["tags",t]:[t],comparator:e};return"exists"!==e&&(o.value=r),this.addFilter(o),this},type:function(t){var e={field:["type"],value:t};return t instanceof Array&&(e.comparator="in"),this.addFilter(e),this},orderBy:function(t,e){return this.addSort({field:[t||"time"],direction:e||"descending"}),this}},{compute:function(t,e){var r=new a;return r.addComputationalAggregator(t,e),r},find:function(t){var e=new a;return t&&e.type(t),e},findOne:function(t){var e=this.find(t);return e.setAggregator("nth",{n:0}),e},hasConvertedOn:function(t){try{var e=t.split(".")[0],r=t.split(".")[1];return!!this.findOne(e).where("name","is",r).run()}catch(t){return!1}}}}();